(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{489:function(t,s,a){t.exports=a.p+"assets/img/pic7.e7590fee.jpg"},490:function(t,s,a){t.exports=a.p+"assets/img/pic8.6eb62ef1.jpg"},491:function(t,s,a){t.exports=a.p+"assets/img/pic9.19a07c95.jpg"},512:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"'https://www.liaoxuefeng.com',''"}},[t._v("Git 基础知识整理")])]),t._v(" "),e("p",[t._v("工作区                       暂存区                                     仓库区\n--\x3e "),e("strong",[e("code",[t._v("git add .")])]),t._v(" --\x3e     --\x3e "),e("strong",[e("code",[t._v("git commit -m '提交说明'")])]),t._v(" --\x3e\n<--           "),e("strong",[e("code",[t._v("git reset --hard HEAD^")])]),t._v("                    <--")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第一次使用 Git 时"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("bash\n    git config - -global  user.email “you@example.com”    \n    git config - -global  user.email  “用户名” \n    ")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 将指定文件添加到暂存区 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git add 文件名")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 把当前工作区所有的修改添加到暂存区 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git add . ")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 把当前暂存区中的所有内容永久提交到仓库分支"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("并生成"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'修改版本号'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git commit -m '提交说明'")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 查看当前工作区"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("暂存区"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("仓库分支"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("三者的状态 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git status")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 具体修改的内容 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git diff 文件名")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 查看文件内容 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("cat 文件名 ")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 显示从最近到最远的提交日志 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git log")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 记录每一次的命令 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git reglog")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 回退到上一个版本 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git reset --hard HEAD^")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("恢复删除")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("还没有提交到版本库"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("修改文件")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("自修改还没有被放到暂存区"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("已经放到暂存区"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("又作了修改"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("撤销修改就会回到添加到暂存区后的状态"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git checkout -- 文件名")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 用于删除一个文件"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("相当于在文件管理器中删除 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git rm")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  查看分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git branch")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  创建分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git branch <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  切换分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git checkout <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  创建"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("切换分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git checkout -b <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 或者 "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git switch -c <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  合并某分支到当前分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git merge <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  删除分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git branch -d <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  合并分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('git merge --no-ff -m "merge with no-ff" <name>')]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  贮藏功能 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git stash")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  贮藏列表 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git stash list")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  应用贮藏 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git stash apply")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 恢复后"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("stash 内容并不删除"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("需要用 "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git stash drop")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 来删除"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  应用贮藏 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git stash pop")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 恢复的同时把 stash 内容也删除了"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  在 master 分支上修复的 bug"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("想要合并到当前dev分支上"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("可以用"),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git cherry-pick <commit>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("命令"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("把 bug 提交的修改"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"复制"')]),t._v("到当前分支"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("避免重复劳动"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  删除的分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git branch -d <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  强制删除没有合并的分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git branch -D <name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  查看远程库的信息 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git remote")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  查看远程库的详细信息 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git remote -v")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 显示可以抓取和推送的 "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("origin")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 的地址"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("如果没有推送权限"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("就看不到 push 的地址\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  将本地提交推送到远程库 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git push origin <branch-name>")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("如果推送失败"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("先用 "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git pull")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("抓取远程的新提交"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  在本地创建和远程分支对应的分支 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git checkout -b <branch-name> origin/branch-name")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("本地和远程分支的名称最好一致"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 建立本地分支和远程分支的关联"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("使用 "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("git branch --set-upstream branch-name origin/branch-name")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n")])])]),t._v(" "),e("h2",{attrs:{id:"git-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-简介"}},[t._v("#")]),t._v(" Git 简介")]),t._v(" "),e("h3",{attrs:{id:"什么是-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-git"}},[t._v("#")]),t._v(" 什么是 Git ?")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("Git 是目前世界上最先进的"),e("strong",[t._v("分布式版本控制系统")]),t._v("(没有之一)."),e("br"),t._v("\nlinux之父尤纳斯为了更好的管理他自己的开源项目linux系统而自己开发的一个软件，这个软件可以帮助Linux更好的进行开源开发，名字就叫Git。")])]),t._v(" "),e("h3",{attrs:{id:"分布式-vs-集中式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分布式-vs-集中式"}},[t._v("#")]),t._v(" 分布式 VS 集中式")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("集中式版本控制系统: 版本库是集中存放在中央服务器的,而干活的时候,用的都是自己的电脑,所以要先从中央服务器取得最新的版本,然后开始干活,干完活了")])]),t._v(" "),e("h2",{attrs:{id:"安装-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-git"}},[t._v("#")]),t._v(" 安装 Git")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 下载安装地址"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("安装完成后,还需要最后一步配置,在命令行输入:")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email@example.com"')]),t._v("\n\n")])])]),e("blockquote",[e("p",[t._v("注意: "),e("code",[t._v("git config")]),t._v(" 命令的 "),e("code",[t._v("--global")]),t._v(" 参数,用了这个参数,表示你这台机器上所有的 Git 仓库都会使用这个配置,当然,也可以对某个仓库指定不同的 用户名 和 Email 地址.")])]),t._v(" "),e("h2",{attrs:{id:"创建版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[t._v("#")]),t._v(" 创建版本库")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v('版本库又名仓库(repository),可以简单理解成一个目录,这个目录里面的所有文件都可以被 Git 管理起来,每个文件的修改、删除，Git 都能跟踪,以便任何时刻都可以追踪历史,或者在将来某个时刻可以"还原".')])]),t._v(" "),e("h3",{attrs:{id:"创建一个空目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建一个空目录"}},[t._v("#")]),t._v(" 创建一个空目录")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个空目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" learngit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入创建的空目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" learngit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v("\n")])])]),e("h3",{attrs:{id:"将创建的空目录-变成-git-可以管理的仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将创建的空目录-变成-git-可以管理的仓库"}},[t._v("#")]),t._v(" 将创建的空目录,变成 Git 可以管理的仓库")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回 Initialized empty Git repository in /Users/wendy/Documents/learngit/.git/")]),t._v("\n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("瞬间 Git 就把仓库创建好了,而且告诉你是一个空的仓库("),e("strong",[t._v("empty Git repository")]),t._v("),同时,当前目录下多了一个"),e("code",[t._v(".git")]),t._v("的目录,这个目录是 Git 来跟踪管理版本库的,没事千万不要手动修改这个目录里面的文件,不然改乱了,就把 Git 仓库给破坏了.")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("如果没有看到"),e("code",[t._v(".git")]),t._v("目录,那是因为这个目录默认是隐藏的,用"),e("code",[t._v("ls -ah")]),t._v("命令就可以看见.")])]),t._v(" "),e("h3",{attrs:{id:"把文件添加到版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把文件添加到版本库"}},[t._v("#")]),t._v(" 把文件添加到版本库")]),t._v(" "),e("p",[t._v("首先这里再明确一下,所有的版本控制系统,其实只能跟踪文本文件的改动,比如 TXT 文件,网页,所有的程序代码等等,Git 也不例外."),e("br"),t._v("\n版本控制系统可以告诉你每次的改动,但是 图片,视频这些二进制文件,虽然也能由版本控制系统管理,但没法跟踪文件的变化,只能把二进制文件每次改动串起来,也就是只知道图片从100KB 改成了 120KB,但是到底改了啥,版本控制系统不知道,也无法知道.")]),t._v(" "),e("h3",{attrs:{id:"编写文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编写文件"}},[t._v("#")]),t._v(" 编写文件")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("# readme"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt 在仓库中创建的文档"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("随便写些内容\nGit is a version control system"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nGit is free software"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("h3",{attrs:{id:"git-add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-add"}},[t._v("#")]),t._v(" git add")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("git add xxx.html")]),t._v(": 将指定的文件添加到暂存区")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt\n")])])]),e("blockquote",[e("p",[t._v("执行上面的命令,没有任何显示")])]),t._v(" "),e("h3",{attrs:{id:"git-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v('git commit -m "xxx"')]),t._v(": 将文件提交到仓库,"),e("code",[t._v("-m")]),t._v(" 后面输入的是本次提交的说明,可以输入任意内容")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrote a readme file"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 27359bc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" wrote a readme "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" insertions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" readme.txt\n")])])]),e("blockquote",[e("p",[e("code",[t._v("1 file changed")]),t._v(":1个文件被改动(我们新添加的 readme.txt 文件);"),e("code",[t._v("2 insertions")]),t._v(":插入了两行内容(readme.txt有两行内容）.\n"),e("code",[t._v("git add file1.txt file2.txt")]),t._v(":同时提交多个文件到暂存区 "),e("code",[t._v("git commit -m 'xxx'")]),t._v(":可以一次提交很多文件,到仓库")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("遇到的问题:"),e("br"),t._v("\nQ:输入"),e("code",[t._v("git add readme.txt")]),e("br"),t._v("\n得到错误:"),e("code",[t._v("fatal: not a git repository (or any of the parent directories)")]),t._v("."),e("br"),t._v("\nA: Git 命令必须在 Git 仓库目录内执行("),e("code",[t._v("git init")]),t._v("除外),在仓库目录外执行是没有意义的.\nQ:输入"),e("code",[t._v("git add readme.txt")]),e("br"),t._v("\n得到错误:"),e("code",[t._v("fatal: pathspec 'readme.txt' did not match any files")]),e("br"),t._v("\nA:添加某个文件时,该文件必须在当前目录下存在,用"),e("code",[t._v("ls")]),t._v("或者"),e("code",[t._v("dir")]),t._v(" 命令查看当前目录文件,看看文件是否存在,或者写错文件名.")])]),t._v(" "),e("h2",{attrs:{id:"时光穿梭机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#时光穿梭机"}},[t._v("#")]),t._v(" 时光穿梭机")]),t._v(" "),e("h3",{attrs:{id:"版本回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),e("h4",{attrs:{id:"git-status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("git status")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("git status")]),t._v(":命令可以让我们时刻掌握仓库当前的状态.")])]),t._v(" "),e("p",[e("strong",[t._v("修改文件")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改已经存在的 readme.txt")]),t._v("\nGit is a distributed version control system"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nGit is free software"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\nChanges not staged "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" commit:\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" working directory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tmodified:   readme.txt\n\nno changes added to commit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面的命令告诉我们,`readme.txt`被修改了,但还没有准备提交的修改.")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h4",{attrs:{id:"cat-文件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cat-文件名"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("cat 文件名")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("cat 文件名")]),t._v(": 查看文件内容")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" readme.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\nGit is a distributed version control system.\nGit is "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software.\n")])])]),e("hr"),t._v(" "),e("h4",{attrs:{id:"git-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("git diff")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("git diff 文件名")]),t._v(" 查看具体做了什么修改\n"),e("code",[t._v(":q")]),t._v(":退出状态列表")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" readme.tex\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/readme.txt b/readme.txt\nindex d8036c1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("013b5bc "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/readme.txt\n+++ b/readme.txt\n@@ -1,2 +1,2 @@\n-Git is a version control system.\n+Git is a distributed version control system.\n Git is "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" software.\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h4",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("git log")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("git log")]),t._v(" : 显示从最近到最远的提交日志"),e("br"),t._v(" "),e("code",[t._v("git log --pretty=oneline")]),t._v(": 优化返回的提交日志")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\ncommit fc4f876e524282ebfdba3afd5e18346c644b8bf2 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor: Wendy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("754610995")]),t._v("@qq.com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":15:06 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" +0800\n\n    append GPL\n\ncommit f65ae060c84d62c8cf8f8c3b5797271631cdfa4e\nAuthor: Wendy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("754610995")]),t._v("@qq.com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":59:53 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" +0800\n\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\n\ncommit d040a1e44db7c8b1c5124fe342d8594d56066df2\nAuthor: Wendy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("754610995")]),t._v("@qq.com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":16:25 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" +0800\n\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" files\n\ncommit 27359bc5d186e7bd56a540cd087ae2bd93a6debe\nAuthor: Wendy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("754610995")]),t._v("@qq.com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate:   Thu Jul "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":33:57 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v(" +0800\n\n    wrote a readme "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("END"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h4",{attrs:{id:"git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("git reset")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("git reset --hard HEAD^")]),t._v(": 版本回退(回到过去,穿梭未来)"),e("br")]),t._v(" "),e("p",[t._v("在 Git 中,用"),e("code",[t._v("HEAD")]),t._v("表示当前版本,也就是最新提交的"),e("code",[t._v("提交 ID:fc4f876e524282ebfdba3afd5e18346c644b8bf2")]),t._v(",上一个版本就是"),e("code",[t._v("HEAD^")]),t._v(",上上一个版本就是"),e("code",[t._v("HEAD^^")]),t._v(",当然往上100个版本写100个"),e("code",[t._v("^")]),t._v("比较容易数不过来,所以写成"),e("code",[t._v("HEAD~100")]),t._v(".")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回 HEAD is now at f65ae06 add distributed")]),t._v("\n")])])]),e("p",[e("img",{attrs:{src:a(489),alt:"图片"}})]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("Git 的版本回退速度非常快,因为 Git 在内部有个指向当前版本的"),e("code",[t._v("HEAD")]),t._v("指针,当你回退版本的时候,Git仅仅是把"),e("code",[t._v("HEAD")]),t._v("从指向 "),e("code",[t._v("append GPL")]),t._v(",改为"),e("code",[t._v("add distributed")]),t._v(",然后顺便把工作区的文件更新了.所以你让"),e("code",[t._v("HEAD")]),t._v("指向哪个版本号,你就把当前版本定位在哪."),e("br")])]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"git-reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog"}},[t._v("#")]),t._v(" "),e("strong",[e("code",[t._v("git reflog")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[e("code",[t._v("git reglog")]),t._v(":记录每一次的命令."),e("br"),t._v("\n当前所处分支"),e("code",[t._v("append GPL")]),t._v("想回退"),e("code",[t._v("add distributed")]),t._v(",之后,所处分支"),e("code",[t._v("add distributed")]),t._v(",想回到"),e("code",[t._v("append GPL")]),t._v(".\n但是必须找到"),e("code",[t._v("append GPL")]),t._v("的"),e("code",[t._v("commit id")])])]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"工作区和暂存区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作区和暂存区"}},[t._v("#")]),t._v(" 工作区和暂存区")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("Git 和其他版本控制系统如SVN的一个不同之处就是有"),e("strong",[t._v("暂存区")]),t._v("的概念")])]),t._v(" "),e("h4",{attrs:{id:"工作区"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作区"}},[t._v("#")]),t._v(" 工作区")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("工作区: 就是你在电脑里能看到的目录,比如我的 "),e("code",[t._v("learngit")]),t._v(" 文件夹.")])]),t._v(" "),e("h4",{attrs:{id:"版本库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本库"}},[t._v("#")]),t._v(" 版本库")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("版本库: 工作区有一个隐藏目录"),e("code",[t._v(".git")]),t._v(",这个不算工作区,而是 Git 的版本库.")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("Git 的版本库里存了很多东西,其中最重要的就是称为 stage(或者叫 index)的"),e("code",[t._v("暂存区")]),t._v(",还有 Git 为我们自动创建的第一个分支"),e("code",[t._v("master")]),t._v(",以及指向"),e("code",[t._v("master")]),t._v("的一个指针叫"),e("code",[t._v("HEAD")]),t._v(".")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(490),alt:"图片"}})]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("blockquote",[e("p",[t._v("我们把文件往 Git版本库添加的时候,是分两步执行:")])]),t._v(" "),e("blockquote",[e("p",[t._v("第一步: 是用"),e("code",[t._v("git add")]),t._v("把文件添加进去,实际上就是把文件修改添加到暂存区;")])]),t._v(" "),e("blockquote",[e("p",[t._v("第二步: 是用"),e("code",[t._v("git commit")]),t._v(" 提交修改,实际上就是把暂存区的所有内容提交到当前分支.")])]),t._v(" "),e("blockquote",[e("p",[t._v("因为我们创建 Git版本库时,Git 自动创建了唯一一个"),e("code",[t._v("master")]),t._v("分支,所以,现在,"),e("code",[t._v("git commit")]),t._v("就是往"),e("code",[t._v("master")]),t._v("分支上提交修改.可以简单的理解为,需要提交的文件修改通通放到暂存区,然后,一次性提交暂存区的所有修改.")])])]),t._v(" "),e("h3",{attrs:{id:"管理修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理修改"}},[t._v("#")]),t._v(" 管理修改")]),t._v(" "),e("h4",{attrs:{id:"git-跟踪并管理的是修改-而非文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-跟踪并管理的是修改-而非文件"}},[t._v("#")]),t._v(" Git 跟踪并管理的是修改,而非文件.")]),t._v(" "),e("h3",{attrs:{id:"撤销修改-git-checkout-文件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改-git-checkout-文件名"}},[t._v("#")]),t._v(" 撤销修改 "),e("code",[t._v("git checkout -- 文件名")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("场景1: 当你改乱了工作区某个文件的内容,想直接丢弃工作区的修改时,用命令"),e("code",[t._v("git checkout -- file")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("场景2: 当你不但改乱了工作区某个文件的内容,还添加到了暂存区,想丢弃修改,分两步,第一步命令"),e("code",[t._v("git reset HEAD <file>")]),t._v(",就回到场景1,第二步按场景1操作.")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("场景3: 已经提交了不合适的修改到版本库时,想要撤销本次提交,使用命令"),e("code",[t._v("git reset 版本号")]),t._v(",不过前提是没有推动到远程库.")])]),t._v(" "),e("h3",{attrs:{id:"删除文件-git-checkout-文件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除文件-git-checkout-文件名"}},[t._v("#")]),t._v(" 删除文件 "),e("code",[t._v("git checkout -- 文件名")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("blockquote",[e("p",[t._v("一般情况下,通常直接在文件管理器中把没用的文件删了,或者用"),e("code",[t._v("rm 文件")]),t._v("命令删除.")])]),t._v(" "),e("blockquote",[e("p",[t._v("接下来的面临两个选择:"),e("br")])]),t._v(" "),e("blockquote",[e("p",[t._v("一是:确实要存版本库中删除该文件,那就用命令 "),e("code",[t._v("git rm 文件")]),t._v(" 删掉(先手动删除文件,然后使用 "),e("code",[t._v("git rm 文件")]),t._v(",和 git add 文件 效果是一样的),并且 "),e("code",[t._v("git commit")]),t._v(",那么文件就从版本库中被删除了.")])]),t._v(" "),e("blockquote",[e("p",[t._v("另一种是:删错了,因为版本库里还有呢,所以可以把误删的文件恢复到最新版本"),e("code",[t._v("git checkout -- test.txt")]),t._v(","),e("code",[t._v("git checkout")]),t._v("其实是用版本库里的版本替换工作区的版本,无论工作区是修改还是删除.")])])]),t._v(" "),e("h2",{attrs:{id:"远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("ul",[e("li",[e("p",[t._v("GitHub 网站,提供 Git 仓库托管服务.")])]),t._v(" "),e("li",[e("p",[t._v("注册 GitHub 账号,由于你的本地 Git 仓库和 GitHub 仓库之间的传输是通过 SSH 加密的,所以需要一点配置:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("第一步: 创建 "),e("code",[t._v("SSH Key")]),t._v(":")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在用户主目录下,看看有没有"),e("code",[t._v(".ssh")]),t._v(" 目录,如果有,再看看这个目录下有没有"),e("code",[t._v("id_rsa")]),t._v("和"),e("code",[t._v("id_rsa.pub")]),t._v("这两个文件,如果有了,可直接跳到下一步("),e("code",[t._v("进入cd ~: 进入用户根目录 --\x3e ll:查看目录中的文件")]),t._v("),如果没有,打卡"),e("code",[t._v("Shell")]),t._v(",创建"),e("code",[t._v("SSH Key")]),t._v(":"),e("code",[t._v('ssh-keygen -t rsa -C "youremail@example.com"')]),t._v(",然后一路回车,使用默认值即可,由于这个"),e("code",[t._v("Key")]),t._v("也不是用于军事目的,所有也无需设置密码.")])]),t._v(" "),e("li",[e("p",[t._v("这时在用户主目录里找到"),e("code",[t._v(".ssh")]),t._v("目录,里面有"),e("code",[t._v("id_rsa")]),t._v("和"),e("code",[t._v("id_rsa.pub")]),t._v("这两个文件,这两个就是"),e("code",[t._v("SSH Key")]),t._v("的密钥对,"),e("code",[t._v("id_rsa")]),t._v("是私钥,不能泄露出去,"),e("code",[t._v("id_rsa.pub")]),t._v("是公钥,可以放心地告诉任何人.")])])])]),t._v(" "),e("li",[e("p",[t._v("第二步:登录 GitHub,打开"),e("code",[t._v("Settings --\x3e SSH and GPG keys")]),t._v(",点"),e("code",[t._v("Add SSH Key")]),t._v("，填上任意Title，在Key文本框里粘贴"),e("code",[t._v("id_rsa.pub")]),t._v("文件的内容.")])])])]),t._v(" "),e("li",[e("p",[t._v("为什么 GitHub 需要SSH Key 呢? "),e("br"),t._v("\n因为 GitHub 需要识别出你推送的提交确实是你推送的,而不是别人冒充的,而 Git 支持 SSH 协议,所以,GitHub 只要知道了你的公钥,就可以确认只有你自己才能推送."),e("br"),t._v("\n当然,GitHub 允许你添加多个 Key,假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了.")])])])]),t._v(" "),e("h3",{attrs:{id:"添加远程库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加远程库"}},[t._v("#")]),t._v(" 添加远程库")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("ul",[e("li",[e("p",[t._v("本地创建了一个 Git 仓库后,又想在 GitHub 创建一个 Git 仓库,并且让这两个仓库进行远程同步,这样,GitHub 上的仓库即可以作为备份,又可以让其他人通过该仓库来协作,真实一举两得.")]),t._v(" "),e("ul",[e("li",[t._v("登录 GitHub,点击右上角找到"),e("code",[t._v("New repository")]),t._v("按钮,创建一个新的仓库:")]),t._v(" "),e("li",[t._v("在"),e("code",[t._v("Repository name")]),t._v("填入"),e("code",[t._v("learngit")]),t._v(",其他保持默认配置,点击"),e("code",[t._v("Create repository")]),t._v("按钮,就成功创建了一个新的 Git 仓库.")]),t._v(" "),e("li",[t._v("在 GitHub 上的这个"),e("code",[t._v("learngit")]),t._v("仓库还是空的,GitHub 告诉我们,可以从这个仓库克隆出新的仓库,也可以把一个已有的本地仓库与之关联,然后,把本地仓库的内容推送到 GitHub 仓库.")]),t._v(" "),e("li",[t._v("将远程仓库与本地仓库进行关联:在本地的"),e("code",[t._v("learngit")]),t._v("仓库下运行命令: "),e("code",[t._v("git remote add origin https://github.com/wendy0428/learngit.git")]),t._v(",添加后,远程库的名字就是"),e("code",[t._v("origin")]),t._v(",这是 Git 默认的叫法,也可以改成别的,但是"),e("code",[t._v("origin")]),t._v("这个名字一看就知道是远程库.")]),t._v(" "),e("li",[t._v("下一步,就可以把本地库的所有内容推送到远程库上: "),e("code",[t._v("git push -u origin master")]),t._v(":"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以下为返回")]),t._v("\n    Counting objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", done.\n    Delta compression using up to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" threads.\n    Compressing objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("/21"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\n    Writing objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("/23"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.89")]),t._v(" KiB "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("970.00")]),t._v(" KiB/s, done.\n    Total "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", reused "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    remote: Resolving deltas: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("/9"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\n    To https://github.com/wendy0428/learngit.git\n     * "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new branch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      master -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master\n    Branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" up to track remote branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" from "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("由于远程库是空的,我们第一次推送"),e("code",[t._v("master")]),t._v("分支时,加上"),e("code",[t._v("-u")]),t._v("参数,Git 不但会把本地的"),e("code",[t._v("master")]),t._v("分支内容推送到远程新的"),e("code",[t._v("master")]),t._v("分支,还会把本地的"),e("code",[t._v("master")]),t._v("分支和远程的"),e("code",[t._v("master")]),t._v("分支关联起来,在以后的推送或者拉取时就可以简化命令.")]),t._v(" "),e("li",[t._v("推送成功之后,可以立刻在 GitHub 页面中看到远程库的内容已经和本地一模一样,从现在起,只要本地作了提交,就可以通过命令:"),e("code",[t._v("git push origin master")]),t._v(",把本地 "),e("code",[t._v("master")]),t._v(" 分支的最新修改推送至 GitHub,现在,你就拥有了"),e("strong",[t._v("真正的分布式版本库!")])])])]),t._v(" "),e("li",[e("p",[t._v("SSH 警告")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("当你第一次使用 Git 的"),e("code",[t._v("clone")]),t._v("或者"),e("code",[t._v("push")]),t._v("命令连接 GitHub 时,会得到一个警告:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("The authenticity of "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github.com (xx.xx.xx.xx)'")]),t._v(" can't be established.\nRSA key fingerprint is xx.xx.xx.xx.xx.\nAre you sure you want to "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("continue")]),t._v(" connecting "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("yes/no"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?\n")])])])]),t._v(" "),e("li",[e("p",[t._v("这是因为 Git 使用 SSH 连接,而 SSH 连接在第一次验证 GitHub 服务器的 Key 时,需要你确认 GitHub 的 Key 的指纹信息是否真的来自 GitHub 服务器,输入"),e("code",[t._v("yse")]),t._v("回车即可.")])]),t._v(" "),e("li",[e("p",[t._v("Git 会输出一个警告,告诉你已经把 GitHub 的 Key 添加到本机的一个信任列表里了,这个警告只会出现一次,后面的操作就不会有任何警告了.")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("Warning: Permanently added "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github.com'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RSA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" to the list of known hosts.\n")])])])])])])])]),t._v(" "),e("h3",{attrs:{id:"从远程库克隆"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从远程库克隆"}},[t._v("#")]),t._v(" 从远程库克隆")]),t._v(" "),e("ul",[e("li",[t._v("首先,登录 GitHub,创建一个新的仓库,名字叫"),e("code",[t._v("gitskills")]),t._v(",勾选"),e("code",[t._v("Initialize this repository with a README")]),t._v(",这样 GitHub 会自动为我们创建一个"),e("code",[t._v("README.md")]),t._v("文件,创建完毕后,就可以看见"),e("code",[t._v("README.md")]),t._v(" 文件.")]),t._v(" "),e("li",[t._v("现在,远程库已经准备好了,下一步是用命令"),e("code",[t._v("git clone")]),t._v("克隆一个本地库:"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/wendy0428/gitskills.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#返回")]),t._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gitskills'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nremote: Enumerating objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", done.\nremote: Counting objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("/3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nremote: Total "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", reused "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delta "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", pack-reused "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nUnpacking objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("/3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\n")])])])]),t._v(" "),e("li",[t._v("注意,GitHub 给出的地址不止一个,因为,Git 支持多种协议,默认的"),e("code",[t._v("git://")]),t._v("使用 ssh,但也可以使用"),e("code",[t._v("https")]),t._v("等其他协议.使用"),e("code",[t._v("https")]),t._v("除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。")])]),t._v(" "),e("h2",{attrs:{id:"分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),e("h3",{attrs:{id:"创建与合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建与合并分支"}},[t._v("#")]),t._v(" 创建与合并分支")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("每次提交,Git 都把它们串成一条时间线,这条时间线就是一个分支.")])]),t._v(" "),e("ul",[e("li",[t._v("查看分支 : "),e("code",[t._v("git branch")])]),t._v(" "),e("li",[t._v("创建分支 : "),e("code",[t._v("git branch <name>")])]),t._v(" "),e("li",[t._v("切换分支 : "),e("code",[t._v("git checkout <name>")])]),t._v(" "),e("li",[t._v("创建+切换分支 : "),e("code",[t._v("git checkout -b <name>")]),t._v(" 或者 "),e("code",[t._v("git switch -c <name>")]),t._v(":")]),t._v(" "),e("li",[t._v("合并某分支到当前分支 : "),e("code",[t._v("git merge <name>")])]),t._v(" "),e("li",[t._v("删除分支 : "),e("code",[t._v("git branch -d <name>")])])]),t._v(" "),e("h3",{attrs:{id:"解决冲突"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[t._v("#")]),t._v(" 解决冲突")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git merge features1")]),t._v(":合并分支,出现冲突"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge features1\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\nAuto-merging README.md\nCONFLICT "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" README.md\nAutomatic merge failed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" fix conflicts and "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" commit the result.\n")])])])]),t._v(" "),e("li",[t._v("Git 告诉我们,"),e("code",[t._v("README.md")]),t._v("文件存在冲突,必须手动解决冲突后再提交")]),t._v(" "),e("li",[e("code",[t._v("git status")]),t._v("可以告诉我们冲突的文件"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("On branch master\nYour branch is ahead of "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin/master'")]),t._v(" by "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" commits.\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git push"')]),t._v(" to publish your "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" commits"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nYou have unmerged paths.\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fix conflicts and run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git merge --abort"')]),t._v(" to abort the merge"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nUnmerged paths:\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to mark resolution"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tboth modified:   README.md\n\nno changes added to commit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("可以直接查看"),e("code",[t._v("README.md")]),t._v("文件")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(491),alt:"图片"}})]),t._v(" "),e("ul",[e("li",[t._v("Git用"),e("code",[t._v("<<<<<<<，=======，>>>>>>>")]),t._v("标记出不同分支的内容，我们修改后保存."),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git add readme"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt \ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conflict fixed"')]),t._v("    \n")])])])]),t._v(" "),e("li",[t._v("用带参数的 "),e("code",[t._v("git log --graph --pretty=oneline --abbrev-commit")]),t._v(" 也可以查看分支的合并情况."),e("br"),t._v("\n用"),e("code",[t._v("git log --graph")]),t._v("命令可以看到分支合并图"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\n*   cf751be "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" conflict fixed\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" * a0459cd AND simple\n* "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 8b306d6 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" simple\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/\n* 32edddc branch "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n* 163135f "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin/master, origin/HEAD"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Initial commit\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("END"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"分支管理策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理策略"}},[t._v("#")]),t._v(" 分支管理策略")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("ul",[e("li",[t._v("通常,合并分支时,如果可能,Git 会用"),e("code",[t._v("Fast forward")]),t._v("模式,但这种模式下,删除分支后,会丢掉分支信息.")]),t._v(" "),e("li",[t._v("如果要强制禁用"),e("code",[t._v("Fast forward")]),t._v("模式,Git就会在 merge 时生成一个新的 commit,这样,从分支历史上就可以看到分支信息."),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge --no-ff -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merge with no-ff"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请注意,`--no-ff`参数,表示禁止`Fast forward`")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为本次合并要创建一个新的 commit,所以加上`-m`参数,把 commit 描述写进去.")]),t._v("\n")])])])])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("分支策略"),e("br"),t._v("\n首先,"),e("code",[t._v("master")]),t._v("分支应该是非常稳定的,也就是仅用来发布新版本,平时不能在上面干活;"),e("br"),t._v("\n其次,"),e("code",[t._v("dev")]),t._v("分支是不稳定的,到某个时候,比如1.0版本发布时,再把"),e("code",[t._v("dev")]),t._v("分支合并到"),e("code",[t._v("master")]),t._v("上,在"),e("code",[t._v("master")]),t._v("分支发布1.0版本;")])]),t._v(" "),e("h3",{attrs:{id:"多人协作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多人协作"}},[t._v("#")]),t._v(" 多人协作")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("当你从远程仓库克隆时,实际上 Git 自动把本地的"),e("code",[t._v("master")]),t._v("分支和远程的"),e("code",[t._v("master")]),t._v("分支对应起来了,并且,远程仓库的默认名称是"),e("code",[t._v("origin")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git remote")]),t._v(" : 查看远程库的信息")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git remote -v")]),t._v(": 查看远程库的详细信息,显示可以抓取和推送的"),e("code",[t._v("origin")]),t._v("的地址,如果没有推送权限,就看不到 push 的地址")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\norigin\thttps://github.com/wendy0428/gitskills.git "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\norigin\thttps://github.com/wendy0428/gitskills.git "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("推送分支 : "),e("code",[t._v("git push origin <name>")]),t._v("就是把该分支上的所有本地提交推送到远程库,推送时,要指定本地分支,这样,Git 就会把该分支推送到远程库对应的远程分支上.")])]),t._v(" "),e("li",[e("p",[t._v("抓取分支 : "),e("code",[t._v("git pull")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回  git pull 失败")]),t._v("\nThere is no tracking information "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the current branch.\nPlease specify "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" branch you want to merge with.\nSee git-pull"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details.\n\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\nIf you wish to "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" tracking information "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" this branch you can "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" so with:\n\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream-to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("origin/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dev\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream-to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("origin/dev dev\n")])])])]),t._v(" "),e("li",[e("p",[t._v("git pull也失败了，原因是没有指定本地dev分支与远程origin/dev分支的链接，根据提示，设置dev和origin/dev的链接")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream-to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("origin/dev dev\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回")]),t._v("\nBranch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" up to track remote branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev'")]),t._v(" from "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("因此,多人协作的工作模式通常是这样的:")]),t._v(" "),e("ul",[e("li",[t._v("首先,可以试图用"),e("code",[t._v("git push origin <branch-name>")]),t._v("推送自己的修改;")]),t._v(" "),e("li",[t._v("如果推送失败,则因为远程分支比你的本地更新,需要先用"),e("code",[t._v("git pull")]),t._v("试图合并;")]),t._v(" "),e("li",[t._v("如果合并有冲突,则解决冲突,并在本地提交;")]),t._v(" "),e("li",[t._v("没有冲突或者解决冲突后,再用"),e("code",[t._v("git push origin <branch-name>")]),t._v("推送就能成功!")]),t._v(" "),e("li",[t._v("注意: 如果"),e("code",[t._v("git pull")]),t._v("提示"),e("code",[t._v("no tracking infomation")]),t._v(",则说明本地分支和远程分支的链接关系没有创建,用命令"),e("code",[t._v("git branch --set-upstream-to <branch-name> origin/<branch-name>")]),t._v(".")])])])]),t._v(" "),e("h3",{attrs:{id:"rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[t._v("#")]),t._v(" Rebase")]),t._v(" "),e("h2",{attrs:{id:"标签管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签管理"}},[t._v("#")]),t._v(" 标签管理")]),t._v(" "),e("h3",{attrs:{id:"创建-操作标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-操作标签"}},[t._v("#")]),t._v(" 创建/操作标签")]),t._v(" "),e("ul",[e("li",[t._v("创建标签: "),e("code",[t._v("git tag <name>")]),t._v(" :就可以打一个新标签,默认标签是打在最新提交的 commit 上的.")]),t._v(" "),e("li",[t._v("历史提交的 commit 上打标签: 先找到历史提交的 commit id :"),e("code",[t._v("git log --pretty=oneline --abbrev-commit")]),t._v(",然后 "),e("code",[t._v("git tag <name> <commit id>")])]),t._v(" "),e("li",[t._v("查看标签 : "),e("code",[t._v("git tag")]),t._v(" :标签不是按照时间顺序列出,而是按照字母顺序的")]),t._v(" "),e("li",[t._v("创建带有说明的标签 : "),e("code",[t._v('git tag -a v0.1 -m "version 0.1 released" 1094adb')]),t._v(","),e("code",[t._v("-a")]),t._v("指定标签名,"),e("code",[t._v("-m")]),t._v("指定说明文字.")]),t._v(" "),e("li",[t._v("查看标签信息 : "),e("code",[t._v("git show <tagname>")])]),t._v(" "),e("li",[t._v("删除标签 : "),e("code",[t._v("git tag -d <tagname>")]),t._v(" : 因为创建的标签只存储在本地,不会自动推送到远程,所以,打错的标签可以在本地安全删除.")]),t._v(" "),e("li",[t._v("推送某个标签到远程 : "),e("code",[t._v("git push origin <tagname>")])]),t._v(" "),e("li",[t._v("一次性推送全部尚未推送到远程的本地标签 : "),e("code",[t._v("git push origin --tags")])]),t._v(" "),e("li",[t._v("删除标签(已推送至远程) : 先删除本地 : "),e("code",[t._v("git tag -d <tagname>")]),t._v(",然后,从远程删除 : "),e("code",[t._v("git push origin :refs/tags/v0.9")])])]),t._v(" "),e("h2",{attrs:{id:"自定义-git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义-git"}},[t._v("#")]),t._v(" 自定义 Git")]),t._v(" "),e("h3",{attrs:{id:"忽略特殊文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略特殊文件"}},[t._v("#")]),t._v(" 忽略特殊文件")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("在Git工作区的根目录下创建一个特殊的 "),e("code",[t._v(".gitignore")]),t._v("文件,然后把要忽略的文件名填进去，Git就会自动忽略这些文件.\n最后一步就是把"),e("code",[t._v(".gitignore")]),t._v("文件提交到 Git.")])]),t._v(" "),e("h2",{attrs:{id:"一点一滴都是进步-2020-07-09-14-28"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一点一滴都是进步-2020-07-09-14-28"}},[t._v("#")]),t._v(" 一点一滴都是进步 2020-07-09 14:28")])])}),[],!1,null,null,null);s.default=n.exports}}]);